<?xml version="1.0" encoding="UTF-8"?>
<report xmlns="http://www.eclipse.org/birt/2005/design" version="3.2.23" id="1">
    <property name="createdBy">Eclipse BIRT Designer Version 4.2.3.v20131216-0430 Build &lt;4.2.3.v20131216-0430></property>
    <text-property name="title">Planning Roadmap</text-property>
    <html-property name="description">An Application within a Report.&#13;
&#13;
The main focus is the Retirement Roadmap chart, which is very dynamic in nature, and attempts to predict the likelyhood to retire and meet life goals.&#13;
&#13;
The form underneath the chart can be used to add new life events, or edit existing ones, as well the monthly contribution amount, and investement style.  Together all these options are used to calculate the chart, and determine if retirement and life goals can be met.</html-property>
    <property name="units">in</property>
    <method name="beforeFactory"><![CDATA[monthlyContribution = params["pMonthlyContribution"].value;
returnpct = params["pInvestmentStyle"].value;
var lifeEventTypesAll = params["pLifeEventTypes"].value;
var lifeEventStatesAll = params["pLifeEventStates"].value;
var lifeEventNamesAll = params["pLifeEventNames"].value;
var lifeEventDatesAll = params["pLifeEventDates"].value;
var lifeEventAmountsAll = params["pLifeEventAmounts"].value;
lifeEventTypes = [];
if (lifeEventTypesAll != null)
	lifeEventTypes = lifeEventTypesAll.split(",");
lifeEventStates = [];
if (lifeEventStatesAll != null)
	lifeEventStates = lifeEventStatesAll.split(",");
lifeEventNames = [];
if (lifeEventNamesAll != null)
	lifeEventNames = lifeEventNamesAll.split(",");
lifeEventDates = [];
if (lifeEventDatesAll != null)
	lifeEventDates = lifeEventDatesAll.split(",");
lifeEventAmounts = [];
if (lifeEventAmountsAll != null)
	lifeEventAmounts = lifeEventAmountsAll.split(",");
lifeEventRecs = [];
for (var i = 0; i < lifeEventTypes.length; i++) {
	lifeEventRecs[i] = 0;
}
retirementAmountAchievedYearMonth = 0;
retirementAgeGoalAchieved = true;
retirementAmountAtAgeGoal = 0;
	]]></method>
    <property name="iconFile">/templates/blank_report.gif</property>
    <property name="layoutPreference">auto layout</property>
    <property name="bidiLayoutOrientation">ltr</property>
    <parameters>
        <scalar-parameter name="pMonthlyContribution" id="104">
            <property name="hidden">true</property>
            <property name="valueType">static</property>
            <property name="dataType">integer</property>
            <property name="distinct">true</property>
            <simple-property-list name="defaultValue">
                <value type="constant">10000</value>
            </simple-property-list>
            <list-property name="selectionList"/>
            <property name="paramType">simple</property>
            <property name="controlType">text-box</property>
            <structure name="format">
                <property name="category">Unformatted</property>
            </structure>
        </scalar-parameter>
        <scalar-parameter name="pInvestmentStyle" id="134">
            <property name="hidden">true</property>
            <property name="valueType">static</property>
            <property name="dataType">float</property>
            <property name="distinct">true</property>
            <simple-property-list name="defaultValue">
                <value type="constant">0.04</value>
            </simple-property-list>
            <list-property name="selectionList"/>
            <property name="paramType">simple</property>
            <property name="controlType">text-box</property>
            <structure name="format">
                <property name="category">Unformatted</property>
            </structure>
        </scalar-parameter>
        <scalar-parameter name="pLifeEventTypes" id="105">
            <property name="hidden">true</property>
            <property name="valueType">static</property>
            <property name="dataType">string</property>
            <property name="distinct">true</property>
            <simple-property-list name="defaultValue">
                <value type="constant">1,5,1,5</value>
            </simple-property-list>
            <list-property name="selectionList"/>
            <property name="paramType">simple</property>
            <property name="controlType">text-box</property>
            <structure name="format">
                <property name="category">Unformatted</property>
            </structure>
        </scalar-parameter>
        <scalar-parameter name="pLifeEventStates" id="128">
            <property name="hidden">true</property>
            <property name="valueType">static</property>
            <property name="dataType">string</property>
            <property name="distinct">true</property>
            <simple-property-list name="defaultValue">
                <value type="constant">1,1,0,1</value>
            </simple-property-list>
            <property name="paramType">simple</property>
            <property name="controlType">text-box</property>
            <structure name="format">
                <property name="category">Unformatted</property>
            </structure>
        </scalar-parameter>
        <scalar-parameter name="pLifeEventNames" id="127">
            <property name="hidden">true</property>
            <property name="valueType">static</property>
            <property name="dataType">string</property>
            <property name="distinct">true</property>
            <simple-property-list name="defaultValue">
                <value type="constant">New Home,Safari,Vacation Cottage,Cruise</value>
            </simple-property-list>
            <list-property name="selectionList"/>
            <property name="paramType">simple</property>
            <property name="controlType">text-box</property>
            <structure name="format">
                <property name="category">Unformatted</property>
            </structure>
        </scalar-parameter>
        <scalar-parameter name="pLifeEventDates" id="106">
            <property name="hidden">true</property>
            <property name="valueType">static</property>
            <property name="dataType">string</property>
            <property name="distinct">true</property>
            <simple-property-list name="defaultValue">
                <value type="constant">201604,201803,202001,201509</value>
            </simple-property-list>
            <list-property name="selectionList"/>
            <property name="paramType">simple</property>
            <property name="controlType">text-box</property>
            <structure name="format">
                <property name="category">Unformatted</property>
            </structure>
        </scalar-parameter>
        <scalar-parameter name="pLifeEventAmounts" id="107">
            <property name="hidden">true</property>
            <property name="valueType">static</property>
            <property name="dataType">string</property>
            <property name="distinct">true</property>
            <simple-property-list name="defaultValue">
                <value type="constant">1300000,125000,1200000,75000</value>
            </simple-property-list>
            <list-property name="selectionList"/>
            <property name="paramType">simple</property>
            <property name="controlType">text-box</property>
            <structure name="format">
                <property name="category">Unformatted</property>
            </structure>
        </scalar-parameter>
    </parameters>
    <data-sources>
        <script-data-source name="Data Source" id="17"/>
        <oda-data-source extensionID="com.actuate.data.oda.static" name="Data Source Static" id="423"/>
    </data-sources>
    <data-sets>
        <script-data-set name="Data Set" id="18">
            <list-property name="resultSetHints">
                <structure>
                    <property name="position">1</property>
                    <property name="name">birthyear</property>
                    <property name="dataType">integer</property>
                </structure>
                <structure>
                    <property name="position">2</property>
                    <property name="name">yearmonth</property>
                    <property name="dataType">integer</property>
                </structure>
                <structure>
                    <property name="position">3</property>
                    <property name="name">totalnetworth</property>
                    <property name="dataType">float</property>
                </structure>
                <structure>
                    <property name="position">4</property>
                    <property name="name">retirementage</property>
                    <property name="dataType">integer</property>
                </structure>
                <structure>
                    <property name="position">5</property>
                    <property name="name">retirementamt</property>
                    <property name="dataType">float</property>
                </structure>
                <structure>
                    <property name="position">6</property>
                    <property name="name">projectednetworth</property>
                    <property name="dataType">float</property>
                </structure>
                <structure>
                    <property name="position">7</property>
                    <property name="name">plotdate</property>
                    <property name="dataType">date-time</property>
                </structure>
                <structure>
                    <property name="position">8</property>
                    <property name="name">lifeeventnote</property>
                    <property name="dataType">string</property>
                </structure>
            </list-property>
            <list-property name="columnHints">
                <structure>
                    <property name="columnName">birthyear</property>
                </structure>
                <structure>
                    <property name="columnName">yearmonth</property>
                </structure>
                <structure>
                    <property name="columnName">totalnetworth</property>
                </structure>
                <structure>
                    <property name="columnName">retirementage</property>
                </structure>
                <structure>
                    <property name="columnName">retirementamt</property>
                </structure>
                <structure>
                    <property name="columnName">projectednetworth</property>
                </structure>
                <structure>
                    <property name="columnName">plotdate</property>
                </structure>
                <structure>
                    <property name="columnName">lifeeventnote</property>
                </structure>
            </list-property>
            <structure name="cachedMetaData">
                <list-property name="resultSet">
                    <structure>
                        <property name="position">1</property>
                        <property name="name">birthyear</property>
                        <property name="dataType">integer</property>
                    </structure>
                    <structure>
                        <property name="position">2</property>
                        <property name="name">yearmonth</property>
                        <property name="dataType">integer</property>
                    </structure>
                    <structure>
                        <property name="position">3</property>
                        <property name="name">totalnetworth</property>
                        <property name="dataType">float</property>
                    </structure>
                    <structure>
                        <property name="position">4</property>
                        <property name="name">retirementage</property>
                        <property name="dataType">integer</property>
                    </structure>
                    <structure>
                        <property name="position">5</property>
                        <property name="name">retirementamt</property>
                        <property name="dataType">float</property>
                    </structure>
                    <structure>
                        <property name="position">6</property>
                        <property name="name">projectednetworth</property>
                        <property name="dataType">float</property>
                    </structure>
                    <structure>
                        <property name="position">7</property>
                        <property name="name">plotdate</property>
                        <property name="dataType">date-time</property>
                    </structure>
                    <structure>
                        <property name="position">8</property>
                        <property name="name">lifeeventnote</property>
                        <property name="dataType">string</property>
                    </structure>
                </list-property>
            </structure>
            <property name="dataSource">Data Source</property>
            <method name="open"><![CDATA[curRow = 0;
overlapped = false;
deductamt = 0;

totalnetworth = dataRows[totalBaseRows - 1][2];
retirementamt = dataRows[totalBaseRows - 1][4];
birthyear = parseInt(dataRows[totalBaseRows - 1][0], 10);
retirementage = parseInt(dataRows[totalBaseRows - 1][3], 10);
retirementyear = birthyear + retirementage;

var yearmonth = new String(dataRows[totalBaseRows - 1][1]);
year = parseInt(yearmonth.substring(0, 4), 10);
month = parseInt(yearmonth.substring(4, 6), 10);

recordsToRetAge = 0;
if (retirementyear > year) {
	if (month < 12)
		recordsToRetAge = 12 - month - 1;
	if (year + 1 < retirementyear)
		recordsToRetAge += (retirementyear - year - 1) * 12;
}

]]></method>
            <method name="fetch"><![CDATA[curRow++;
if (curRow > totalBaseRows) {
	if (curRow <= totalBaseRows + recordsToRetAge + 2 ||
			totalnetworth < retirementamt) {
			
		if (month == 12) { 
			month = 0;
			year++;
		}
		month++;		
		var yearmonth = (year * 100) + month;
		
		totalnetworth = totalnetworth + (totalnetworth * returnpct / 12) - deductamt + monthlyContribution;
		
		if (retirementAgeGoalAchieved &amp;&amp; curRow > totalBaseRows + recordsToRetAge + 2)
			retirementAgeGoalAchieved = false;
				
		if (retirementAmountAtAgeGoal == 0 &amp;&amp; curRow == totalBaseRows + recordsToRetAge + 2)
			retirementAmountAtAgeGoal = totalnetworth;
				
		if (retirementAmountAchievedYearMonth == 0 &amp;&amp; totalnetworth >= retirementamt)
			retirementAmountAchievedYearMonth = yearmonth;
				
		deductamt = 0;
		for (i = 0; i < lifeEventDates.length; i++) {
			if (lifeEventDates[i] == yearmonth &amp;&amp; lifeEventStates[i] == 1) {
				lifeEventRecs[i] = curRow;
				deductamt += lifeEventAmounts[i];			
				row["lifeeventnote"] = lifeEventNames[i] + " - $" + lifeEventAmounts[i];				
			}
		}		
		
		row["birthyear"] = dataRows[totalBaseRows - 1][0];
		row["yearmonth"] = yearmonth;
		if (overlapped)
			row["totalnetworth"] = null;
		else
			row["totalnetworth"] = totalnetworth;
		row["retirementage"] = dataRows[totalBaseRows - 1][3];			
		row["retirementamt"] = retirementamt;
		row["projectednetworth"] = totalnetworth;
		row["plotdate"] = new Date(year, month - 1, 1);
		overlapped = true;
		
		totalRecs = curRow;
		return true;
	} else {
		return false;
	}
} else {
	row["birthyear"] = dataRows[curRow - 1][0];
	row["yearmonth"] = dataRows[curRow - 1][1];
	row["totalnetworth"] = dataRows[curRow - 1][2];
	row["retirementage"] = dataRows[curRow - 1][3];
	row["retirementamt"] = dataRows[curRow - 1][4];
	row["projectednetworth"] = null;
	row["plotdate"] = new Date(parseInt(new String(row["yearmonth"]).substring(0,4), 10), parseInt(new String(row["yearmonth"]).substring(4,6), 10) - 1, 1);

	totalRecs = curRow;
	return true;
}

]]></method>
            <method name="close"><![CDATA[reportContext.setPersistentGlobalVariable("allLifeEventStates", lifeEventStates.join(","));	
reportContext.setPersistentGlobalVariable("allLifeEventRecs", lifeEventRecs.join(","));	
reportContext.setPersistentGlobalVariable("allLifeEventTypes", lifeEventTypes.join(","));
reportContext.setPersistentGlobalVariable("retirementGoalAmount", "" + retirementamt);	
reportContext.setPersistentGlobalVariable("retirementGoalAge", "" + (totalBaseRows + recordsToRetAge));
reportContext.setPersistentGlobalVariable("retirementGoalAgeValue", "" + retirementage);
reportContext.setPersistentGlobalVariable("baseChartRows", "" + totalBaseRows);
reportContext.setPersistentGlobalVariable("totalChartRows", "" + totalRecs);	
reportContext.setPersistentGlobalVariable("retirementAmountAchievedYearMonthVar", "" + retirementAmountAchievedYearMonth);

var json = "{";

json += "events:[";
for (var i = 0; i < lifeEventStates.length; i++) {
	if (i > 0)
		json += ",";
	
	json += "{";
	json += "state:" + lifeEventStates[i];
	json += ",rec:" + lifeEventRecs[i];
	json += ",type:" + lifeEventTypes[i]; 
	json += "}";	
}
json += "]";

json += ",goalAmount:" + retirementamt;
json += ",goalAmountValue:'$" + Formatter.format(retirementamt,"#,##0") + "'";
json += ",goalAge:" + (totalBaseRows + recordsToRetAge);
json += ",goalAgeValue:" + retirementage;
json += ",goalAchievedYearMonth:" + retirementAmountAchievedYearMonth;
json += ",baseChartRows:" + totalBaseRows;
json += ",totalChartRows:" + totalRecs;
json += ",investmentStyle: " + params["pInvestmentStyle"].value;

json += "}";

//json = json.replace(/"/g, "\\\"");

vars["planningData"] = json;


]]></method>
        </script-data-set>
        <oda-data-set extensionID="com.actuate.data.oda.static.dataSet" name="Data Set Static" id="424">
            <list-property name="columnHints">
                <structure>
                    <property name="columnName">BIRTH_YEAR</property>
                    <property name="analysis">measure</property>
                    <text-property name="displayName">BIRTH_YEAR</text-property>
                    <property name="onColumnLayout">false</property>
                    <text-property name="heading">BIRTH_YEAR</text-property>
                    <property name="analysisColumn">BIRTH_YEAR</property>
                </structure>
                <structure>
                    <property name="columnName">MNTH_END_YYYYMM</property>
                    <property name="analysis">measure</property>
                    <text-property name="displayName">MNTH_END_YYYYMM</text-property>
                    <property name="onColumnLayout">false</property>
                    <text-property name="heading">MNTH_END_YYYYMM</text-property>
                    <property name="analysisColumn">MNTH_END_YYYYMM</property>
                </structure>
                <structure>
                    <property name="columnName">totalnetworth</property>
                    <property name="analysis">measure</property>
                    <text-property name="displayName">totalnetworth</text-property>
                    <property name="onColumnLayout">false</property>
                    <text-property name="heading">totalnetworth</text-property>
                    <property name="analysisColumn">totalnetworth</property>
                </structure>
                <structure>
                    <property name="columnName">retirementage</property>
                    <property name="analysis">measure</property>
                    <text-property name="displayName">retirementage</text-property>
                    <property name="onColumnLayout">false</property>
                    <text-property name="heading">retirementage</text-property>
                    <property name="analysisColumn">retirementage</property>
                </structure>
                <structure>
                    <property name="columnName">retirementamt</property>
                    <property name="analysis">measure</property>
                    <text-property name="displayName">retirementamt</text-property>
                    <property name="onColumnLayout">false</property>
                    <text-property name="heading">retirementamt</text-property>
                    <property name="analysisColumn">retirementamt</property>
                </structure>
            </list-property>
            <list-property name="parameters"/>
            <structure name="cachedMetaData">
                <list-property name="resultSet">
                    <structure>
                        <property name="position">1</property>
                        <property name="name">BIRTH_YEAR</property>
                        <property name="dataType">integer</property>
                    </structure>
                    <structure>
                        <property name="position">2</property>
                        <property name="name">MNTH_END_YYYYMM</property>
                        <property name="dataType">integer</property>
                    </structure>
                    <structure>
                        <property name="position">3</property>
                        <property name="name">totalnetworth</property>
                        <property name="dataType">integer</property>
                    </structure>
                    <structure>
                        <property name="position">4</property>
                        <property name="name">retirementage</property>
                        <property name="dataType">integer</property>
                    </structure>
                    <structure>
                        <property name="position">5</property>
                        <property name="name">retirementamt</property>
                        <property name="dataType">integer</property>
                    </structure>
                </list-property>
            </structure>
            <method name="beforeOpen"><![CDATA[curRow = 0;
dataRows = [];]]></method>
            <method name="onFetch"><![CDATA[dataRows[curRow] = [];
dataRows[curRow][0] = row[1];
dataRows[curRow][1] = row[2];
dataRows[curRow][2] = row[3];
dataRows[curRow][3] = row[4];
dataRows[curRow][4] = row[5];
curRow++;
totalBaseRows = curRow;
]]></method>
            <property name="dataSource">Data Source Static</property>
            <list-property name="resultSet">
                <structure>
                    <property name="position">1</property>
                    <property name="name">BIRTH_YEAR</property>
                    <property name="nativeName">BIRTH_YEAR</property>
                    <property name="dataType">integer</property>
                    <property name="nativeDataType">3</property>
                </structure>
                <structure>
                    <property name="position">2</property>
                    <property name="name">MNTH_END_YYYYMM</property>
                    <property name="nativeName">MNTH_END_YYYYMM</property>
                    <property name="dataType">integer</property>
                    <property name="nativeDataType">3</property>
                </structure>
                <structure>
                    <property name="position">3</property>
                    <property name="name">totalnetworth</property>
                    <property name="nativeName">totalnetworth</property>
                    <property name="dataType">integer</property>
                    <property name="nativeDataType">3</property>
                </structure>
                <structure>
                    <property name="position">4</property>
                    <property name="name">retirementage</property>
                    <property name="nativeName">retirementage</property>
                    <property name="dataType">integer</property>
                    <property name="nativeDataType">3</property>
                </structure>
                <structure>
                    <property name="position">5</property>
                    <property name="name">retirementamt</property>
                    <property name="nativeName">retirementamt</property>
                    <property name="dataType">integer</property>
                    <property name="nativeDataType">3</property>
                </structure>
            </list-property>
            <xml-property name="queryText"><![CDATA[{"Columns":["BIRTH_YEAR","MNTH_END_YYYYMM","totalnetworth","retirementage","retirementamt"],"Types":[3,3,3,3,3]}]]></xml-property>
            <list-property name="privateDriverProperties">
                <ex-property>
                    <name>DATA</name>
                    <value>[["1961","200902","2559445","65","7000000"],["1961","200903","3271609","65","7000000"],["1961","200904","3305542","65","7000000"],["1961","200905","3240576","65","7000000"],["1961","200906","3236523","65","7000000"],["1961","200907","3229570","65","7000000"],["1961","200908","3254909","65","7000000"],["1961","200909","3385682","65","7000000"],["1961","200910","3414568","65","7000000"],["1961","200911","3494568","65","7000000"],["1961","200912","3554685","65","7000000"],["1961","201001","3684568","65","7000000"],["1961","201002","3746584","65","7000000"],["1961","201003","3896854","65","7000000"],["1961","201004","3995684","65","7000000"],["1961","201005","4020153","65","7000000"],["1961","201006","4035864","65","7000000"],["1961","201007","4143584","65","7000000"],["1961","201008","4243548","65","7000000"],["1961","201009","4238546","65","7000000"],["1961","201010","4558439","65","7000000"],["1961","201011","4407121","65","7000000"],["1961","201012","4377603","65","7000000"],["1961","201101","4118641","65","7000000"],["1961","201102","4044868","65","7000000"],["1961","201103","4021930","65","7000000"],["1961","201104","4177208","65","7000000"],["1961","201105","4295232","65","7000000"],["1961","201106","4024594","65","7000000"],["1961","201107","3988386","65","7000000"],["1961","201108","4018513","65","7000000"],["1961","201109","3690097","65","7000000"],["1961","201110","3170617","65","7000000"],["1961","201111","2973597","65","7000000"],["1961","201112","3057271","65","7000000"],["1961","201201","2899499","65","7000000"],["1961","201202","2660175","65","7000000"],["1961","201203","2803818","65","7000000"],["1961","201204","3041812","65","7000000"],["1961","201205","3210867","65","7000000"],["1961","201206","3209218","65","7000000"],["1961","201207","3421761","65","7000000"],["1961","201208","3525780","65","7000000"],["1961","201209","3578246","65","7000000"],["1961","201210","3601971","65","7000000"],["1961","201211","3617354","65","7000000"],["1961","201212","3694424","65","7000000"],["1961","201301","3776285","65","7000000"],["1961","201302","3864627","65","7000000"],["1961","201303","3946485","65","7000000"],["1961","201304","3955469","65","7000000"],["1961","201305","3994118","65","7000000"],["1961","201306","4039064","65","7000000"],["1961","201307","4076838","65","7000000"],["1961","201308","4106363","65","7000000"],["1961","201309","4174434","65","7000000"],["1961","201310","4252475","65","7000000"],["1961","201311","4340814","65","7000000"],["1961","201312","4443072","65","7000000"],["1961","201401","4558439","65","7000000"],["1961","201402","4636425","65","7000000"],["1961","201403","4742643","65","7000000"],["1961","201404","4836935","65","7000000"]]</value>
                </ex-property>
            </list-property>
        </oda-data-set>
    </data-sets>
    <styles>
        <style name="report" id="4">
            <property name="fontFamily">"Verdana"</property>
            <property name="fontSize">10pt</property>
            <property name="color">#000000</property>
        </style>
        <style name="crosstab-cell" id="5">
            <property name="borderBottomColor">#CCCCCC</property>
            <property name="borderBottomStyle">solid</property>
            <property name="borderBottomWidth">1pt</property>
            <property name="borderLeftColor">#CCCCCC</property>
            <property name="borderLeftStyle">solid</property>
            <property name="borderLeftWidth">1pt</property>
            <property name="borderRightColor">#CCCCCC</property>
            <property name="borderRightStyle">solid</property>
            <property name="borderRightWidth">1pt</property>
            <property name="borderTopColor">#CCCCCC</property>
            <property name="borderTopStyle">solid</property>
            <property name="borderTopWidth">1pt</property>
        </style>
        <style name="crosstab" id="6">
            <property name="borderBottomColor">#CCCCCC</property>
            <property name="borderBottomStyle">solid</property>
            <property name="borderBottomWidth">1pt</property>
            <property name="borderLeftColor">#CCCCCC</property>
            <property name="borderLeftStyle">solid</property>
            <property name="borderLeftWidth">1pt</property>
            <property name="borderRightColor">#CCCCCC</property>
            <property name="borderRightStyle">solid</property>
            <property name="borderRightWidth">1pt</property>
            <property name="borderTopColor">#CCCCCC</property>
            <property name="borderTopStyle">solid</property>
            <property name="borderTopWidth">1pt</property>
        </style>
    </styles>
    <page-setup>
        <simple-master-page name="Simple MasterPage" id="2">
            <property name="type">custom</property>
            <property name="orientation">landscape</property>
            <property name="topMargin">0in</property>
            <property name="leftMargin">0in</property>
            <property name="bottomMargin">0in</property>
            <property name="rightMargin">0in</property>
            <property name="height">700px</property>
            <property name="width">1000px</property>
        </simple-master-page>
    </page-setup>
    <body>
        <grid id="432">
            <expression name="bookmark" type="javascript">"Roadmap"</expression>
            <column id="433"/>
            <row id="434">
                <cell id="435">
                    <property name="paddingTop">0pt</property>
                    <property name="paddingLeft">0pt</property>
                    <property name="paddingBottom">0pt</property>
                    <property name="paddingRight">0pt</property>
                    <table id="373">
                        <property name="width">100%</property>
                        <property name="dataSet">Data Set Static</property>
                        <list-property name="visibility">
                            <structure>
                                <property name="format">all</property>
                                <expression name="valueExpr" type="javascript">true</expression>
                            </structure>
                        </list-property>
                        <list-property name="boundDataColumns">
                            <structure>
                                <property name="name">BIRTH_YEAR</property>
                                <text-property name="displayName">BIRTH_YEAR</text-property>
                                <expression name="expression">dataSetRow["BIRTH_YEAR"]</expression>
                                <property name="dataType">integer</property>
                            </structure>
                            <structure>
                                <property name="name">MNTH_END_YYYYMM</property>
                                <text-property name="displayName">MNTH_END_YYYYMM</text-property>
                                <expression name="expression">dataSetRow["MNTH_END_YYYYMM"]</expression>
                                <property name="dataType">integer</property>
                            </structure>
                            <structure>
                                <property name="name">totalnetworth</property>
                                <text-property name="displayName">totalnetworth</text-property>
                                <expression name="expression">dataSetRow["totalnetworth"]</expression>
                                <property name="dataType">integer</property>
                            </structure>
                            <structure>
                                <property name="name">retirementage</property>
                                <text-property name="displayName">retirementage</text-property>
                                <expression name="expression">dataSetRow["retirementage"]</expression>
                                <property name="dataType">integer</property>
                            </structure>
                            <structure>
                                <property name="name">retirementamt</property>
                                <text-property name="displayName">retirementamt</text-property>
                                <expression name="expression">dataSetRow["retirementamt"]</expression>
                                <property name="dataType">integer</property>
                            </structure>
                        </list-property>
                        <column id="402"/>
                        <column id="403"/>
                        <column id="404"/>
                        <column id="405"/>
                        <column id="406"/>
                        <header>
                            <row id="374">
                                <cell id="375">
                                    <label id="376">
                                        <text-property name="text">BIRTH_YEAR</text-property>
                                    </label>
                                </cell>
                                <cell id="377">
                                    <label id="378">
                                        <text-property name="text">MNTH_END_YYYYMM</text-property>
                                    </label>
                                </cell>
                                <cell id="379">
                                    <label id="380">
                                        <text-property name="text">totalnetworth</text-property>
                                    </label>
                                </cell>
                                <cell id="381">
                                    <label id="382">
                                        <text-property name="text">retirementage</text-property>
                                    </label>
                                </cell>
                                <cell id="383">
                                    <label id="384">
                                        <text-property name="text">retirementamt</text-property>
                                    </label>
                                </cell>
                            </row>
                        </header>
                        <detail>
                            <row id="385">
                                <cell id="386">
                                    <data id="387">
                                        <property name="resultSetColumn">BIRTH_YEAR</property>
                                    </data>
                                </cell>
                                <cell id="388">
                                    <data id="389">
                                        <property name="resultSetColumn">MNTH_END_YYYYMM</property>
                                    </data>
                                </cell>
                                <cell id="390">
                                    <data id="391">
                                        <property name="resultSetColumn">totalnetworth</property>
                                    </data>
                                </cell>
                                <cell id="392">
                                    <data id="393">
                                        <property name="resultSetColumn">retirementage</property>
                                    </data>
                                </cell>
                                <cell id="394">
                                    <data id="395">
                                        <property name="resultSetColumn">retirementamt</property>
                                    </data>
                                </cell>
                            </row>
                        </detail>
                    </table>
                    <table id="319">
                        <property name="width">100%</property>
                        <property name="dataSet">Data Set</property>
                        <list-property name="visibility">
                            <structure>
                                <property name="format">all</property>
                                <expression name="valueExpr" type="javascript">true</expression>
                            </structure>
                        </list-property>
                        <list-property name="boundDataColumns">
                            <structure>
                                <property name="name">birthyear</property>
                                <text-property name="displayName">birthyear</text-property>
                                <expression name="expression">dataSetRow["birthyear"]</expression>
                                <property name="dataType">integer</property>
                            </structure>
                            <structure>
                                <property name="name">yearmonth</property>
                                <text-property name="displayName">yearmonth</text-property>
                                <expression name="expression">dataSetRow["yearmonth"]</expression>
                                <property name="dataType">integer</property>
                            </structure>
                            <structure>
                                <property name="name">totalnetworth</property>
                                <text-property name="displayName">totalnetworth</text-property>
                                <expression name="expression">dataSetRow["totalnetworth"]</expression>
                                <property name="dataType">float</property>
                            </structure>
                            <structure>
                                <property name="name">retirementage</property>
                                <text-property name="displayName">retirementage</text-property>
                                <expression name="expression">dataSetRow["retirementage"]</expression>
                                <property name="dataType">integer</property>
                            </structure>
                            <structure>
                                <property name="name">retirementamt</property>
                                <text-property name="displayName">retirementamt</text-property>
                                <expression name="expression">dataSetRow["retirementamt"]</expression>
                                <property name="dataType">float</property>
                            </structure>
                            <structure>
                                <property name="name">projectednetworth</property>
                                <text-property name="displayName">projectednetworth</text-property>
                                <expression name="expression">dataSetRow["projectednetworth"]</expression>
                                <property name="dataType">float</property>
                            </structure>
                            <structure>
                                <property name="name">plotdate</property>
                                <text-property name="displayName">plotdate</text-property>
                                <expression name="expression">dataSetRow["plotdate"]</expression>
                                <property name="dataType">date-time</property>
                            </structure>
                            <structure>
                                <property name="name">lifeeventnote</property>
                                <text-property name="displayName">lifeeventnote</text-property>
                                <expression name="expression">dataSetRow["lifeeventnote"]</expression>
                                <property name="dataType">string</property>
                            </structure>
                        </list-property>
                        <column id="363"/>
                        <column id="364"/>
                        <column id="365"/>
                        <column id="366"/>
                        <column id="367"/>
                        <column id="368"/>
                        <column id="369"/>
                        <column id="370"/>
                        <header>
                            <row id="320">
                                <cell id="321">
                                    <label id="322">
                                        <text-property name="text">birthyear</text-property>
                                    </label>
                                </cell>
                                <cell id="323">
                                    <label id="324">
                                        <text-property name="text">yearmonth</text-property>
                                    </label>
                                </cell>
                                <cell id="325">
                                    <label id="326">
                                        <text-property name="text">totalnetworth</text-property>
                                    </label>
                                </cell>
                                <cell id="327">
                                    <label id="328">
                                        <text-property name="text">retirementage</text-property>
                                    </label>
                                </cell>
                                <cell id="329">
                                    <label id="330">
                                        <text-property name="text">retirementamt</text-property>
                                    </label>
                                </cell>
                                <cell id="331">
                                    <label id="332">
                                        <text-property name="text">projectednetworth</text-property>
                                    </label>
                                </cell>
                                <cell id="333">
                                    <label id="334">
                                        <text-property name="text">plotdate</text-property>
                                    </label>
                                </cell>
                                <cell id="335">
                                    <label id="336">
                                        <text-property name="text">lifeeventnote</text-property>
                                    </label>
                                </cell>
                            </row>
                        </header>
                        <detail>
                            <row id="337">
                                <cell id="338">
                                    <data id="339">
                                        <property name="resultSetColumn">birthyear</property>
                                    </data>
                                </cell>
                                <cell id="340">
                                    <data id="341">
                                        <property name="resultSetColumn">yearmonth</property>
                                    </data>
                                </cell>
                                <cell id="342">
                                    <data id="343">
                                        <property name="resultSetColumn">totalnetworth</property>
                                    </data>
                                </cell>
                                <cell id="344">
                                    <data id="345">
                                        <property name="resultSetColumn">retirementage</property>
                                    </data>
                                </cell>
                                <cell id="346">
                                    <data id="347">
                                        <property name="resultSetColumn">retirementamt</property>
                                    </data>
                                </cell>
                                <cell id="348">
                                    <data id="349">
                                        <property name="resultSetColumn">projectednetworth</property>
                                    </data>
                                </cell>
                                <cell id="350">
                                    <data id="351">
                                        <property name="resultSetColumn">plotdate</property>
                                    </data>
                                </cell>
                                <cell id="352">
                                    <data id="353">
                                        <property name="resultSetColumn">lifeeventnote</property>
                                    </data>
                                </cell>
                            </row>
                        </detail>
                        <footer>
                            <row id="354">
                                <cell id="355"/>
                                <cell id="356"/>
                                <cell id="357"/>
                                <cell id="358"/>
                                <cell id="359"/>
                                <cell id="360"/>
                                <cell id="361"/>
                                <cell id="362"/>
                            </row>
                        </footer>
                    </table>
                    <text id="431">
                        <property name="contentType">html</property>
                        <text-property name="content"><![CDATA[<script>
var planningData = <VALUE-OF>vars["planningData"]</VALUE-OF>;
</script>]]></text-property>
                    </text>
                    <extended-item extensionName="Chart" id="430">
                        <xml-property name="xmlRepresentation"><![CDATA[<ActuateChart version="2.6.1">
 <ChartWithAxes version="2.6.1" type="Line Chart" subType="Overlay">
  <description value="">
   <font>
    <alignment/>
   </font>
  </description>
  <block>
   <children _type="TitleBlock" visible="false">
    <outline>
     <color _nil="1"/>
    </outline>
    <label>
     <background _nil="1"/>
     <outline>
      <color _nil="1"/>
     </outline>
    </label>
   </children>
   <children _type="Plot">
    <outline>
     <color _nil="1"/>
    </outline>
    <clientArea>
     <outline>
      <color _nil="1"/>
     </outline>
    </clientArea>
   </children>
   <children _type="Legend" visible="false">
    <outline>
     <color _nil="1"/>
    </outline>
    <clientArea>
     <outline>
      <color _nil="1"/>
     </outline>
    </clientArea>
    <separator>
     <color _nil="1"/>
    </separator>
    <title>
     <background _nil="1"/>
     <outline>
      <color _nil="1"/>
     </outline>
    </title>
   </children>
   <bounds _body="0.0,0.0,212.0,130.0"/>
   <insets _body="3.0,10.0,3.0,5.0"/>
   <outline visible="false">
    <color _body=",255,51,51,51"/>
   </outline>
   <background _body=",255,255,255,255"/>
  </block>
  <extendedProperties name="enable.area.alt" value="false"/>
  <extendedProperties name="enable.drill.category" value="true"/>
  <extendedProperties name="enable.drill.series" value="true"/>
  <extendedProperties name="jschart.client.script" value="beforeRendering: function(options, chart)&#13;&#10;{&#13;&#10;    options.plotOptions = {&#13;&#10;        area: {&#13;&#10;            animation: {duration:1500},&#13;&#10;            shadow:true,&#13;&#10;            lineWidth:1&#13;&#10;        }&#13;&#10;    };&#13;&#10;    &#13;&#10;    options.xAxis = {&#13;&#10;        startOnTick: true,&#13;&#10;        endOnTick: true,&#13;&#10;        maxPadding: 0&#13;&#10;         &#13;&#10;    };&#13;&#10;},&#13;&#10;&#13;&#10;afterRendering: function(chart)&#13;&#10;{  &#13;&#10;&#13;&#10;    // Goal Amount line&#13;&#10;    chart.getCore().yAxis[0].addPlotLine({&#13;&#10;     color: &quot;#C0C0C0&quot;,&#13;&#10;     width: 1,&#13;&#10;     zIndex: 5,&#13;&#10;     value: planningData.goalAmount,&#13;&#10;     label: {&#13;&#10;      text: &quot;Retirement Goal amount: &quot; + planningData.goalAmountValue,&#13;&#10;      align: &quot;right&quot;,&#13;&#10;         style: {&#13;&#10;          color: &quot;#C0C0C0&quot;,&#13;&#10;          fontSize: &quot;9pt&quot;&#13;&#10;         },&#13;&#10;         x: -10&#13;&#10;     },&#13;&#10;     id: &quot;goalAmountLine&quot;&#13;&#10;    });&#13;&#10;&#13;&#10;    // Goal Age line&#13;&#10;    chart.getCore().xAxis[0].addPlotLine({&#13;&#10;        color: &quot;#C0C0C0&quot;,&#13;&#10;        width: 1,&#13;&#10;        zIndex: 5,&#13;&#10;        value: planningData.goalAge,&#13;&#10;        label: {&#13;&#10;         text: &quot;Years: &quot; + planningData.goalAgeValue,&#13;&#10;         rotation: 270,&#13;&#10;         verticalAlign: &quot;middle&quot;,&#13;&#10;         style: {&#13;&#10;          color: &quot;#C0C0C0&quot;,&#13;&#10;          fontSize: &quot;10pt&quot;&#13;&#10;         },&#13;&#10;         x: 14&#13;&#10;        },&#13;&#10;        id: &quot;goalAgeLine&quot;&#13;&#10;    });&#13;&#10;    &#13;&#10;    // Actual/Projected dividing line&#13;&#10;    chart.getCore().xAxis[0].addPlotLine({&#13;&#10;        color: &quot;grey&quot;,&#13;&#10;        width: 1,&#13;&#10;        dashStyle: &quot;Dash&quot;,&#13;&#10;        zIndex: 5,&#13;&#10;        value: planningData.baseChartRows,&#13;&#10;        id: &quot;actualProjectedLine&quot;&#13;&#10;    });&#13;&#10;   &#13;&#10;    // Actual section band &#13;&#10;    chart.getCore().xAxis[0].addPlotBand({&#13;&#10;     from: 0,&#13;&#10;     to: planningData.baseChartRows,&#13;&#10;     label: {&#13;&#10;      text: &quot;Actual&quot;,&#13;&#10;      verticalAlign: &quot;top&quot;,&#13;&#10;      style: {&#13;&#10;       color: &quot;black&quot;,&#13;&#10;       fontWeight: &quot;bold&quot;,&#13;&#10;       fontSize: &quot;9pt&quot;&#13;&#10;      }&#13;&#10;     },&#13;&#10;     id: &quot;actualBand&quot;&#13;&#10;    });&#13;&#10;    &#13;&#10;    // Projected section band &#13;&#10;    chart.getCore().xAxis[0].addPlotBand({&#13;&#10;     from: planningData.baseChartRows,&#13;&#10;     to: planningData.totalChartRows,&#13;&#10;     label: {&#13;&#10;      text: &quot;Projected&quot;,&#13;&#10;      verticalAlign: &quot;top&quot;,&#13;&#10;      style: {&#13;&#10;       color: &quot;black&quot;,&#13;&#10;       fontWeight: &quot;bold&quot;,&#13;&#10;       fontSize: &quot;9pt&quot;&#13;&#10;      }&#13;&#10;     },&#13;&#10;     id: &quot;projectedBand&quot;&#13;&#10;    });&#13;&#10;},&#13;&#10;&#13;&#10;beforeDrawDataPoint: function(point, pointOptions, chart, seriesIndex, pointIndex)&#13;&#10;{&#13;&#10;&#13;&#10;    if (pointOptions.y == 0) {&#13;&#10;        if (seriesIndex == 0 &amp;&amp; pointIndex &gt;= planningData.baseChartRows)&#13;&#10;            pointOptions.y = null;&#13;&#10;        else if (seriesIndex == 1 &amp;&amp; pointIndex &lt;= planningData.baseChartRows)&#13;&#10;            pointOptions.y = null;&#13;&#10;    }&#13;&#10;&#13;&#10;    if (seriesIndex == 1) {&#13;&#10;    &#13;&#10;&#13;&#10;&#13;&#10;        for (var i = 0; i &lt; planningData.events.length; i++) {&#13;&#10;         if (planningData.events[i].state &amp;&amp; pointIndex == planningData.events[i].rec) {&#13;&#10;          var type = planningData.events[i].type;    &#13;&#10;          // If you want images on Info Console path&#13;&#10;          //var markerURL = &quot;images/&quot;;&#13;&#10;          // If you want images in the Resources of the Application on the iHub&#13;&#10;          //var markerURL = &quot;servlet/DownloadFile?name=/Resources/images/&quot;;&#13;&#10;          var markerURL = &quot;servlet/DownloadFile?name=/Applications/SFWealthApp/images/&quot;;&#13;&#10;          if (location.href.indexOf(&quot;/apps/&quot;) &gt; -1)&#13;&#10;           markerURL = &quot;../../&quot; + markerURL;&#13;&#10;           &#13;&#10;                    if (type == 1)&#13;&#10;                  markerURL += &quot;Home.png&quot;;&#13;&#10;                 else if (type == 2)&#13;&#10;                        markerURL += &quot;Vehicle.png&quot;;&#13;&#10;                    else if (type == 3)&#13;&#10;                        markerURL += &quot;College.png&quot;;&#13;&#10;                    else if (type == 4)&#13;&#10;                        markerURL += &quot;Wedding.png&quot;;&#13;&#10;                    else if (type == 5)&#13;&#10;                        markerURL += &quot;Vacation.png&quot;;&#13;&#10;                    else if (type == 6)&#13;&#10;                        markerURL += &quot;Misc.png&quot;;&#13;&#10;&#13;&#10;         &#13;&#10;         &#13;&#10;        pointOptions.dataLabels = {&#13;&#10;        enabled: true,&#13;&#10;                    useHTML: true,&#13;&#10;                    formatter: function() {&#13;&#10;                        return &#039;&lt;div  style=&quot;position:absolute;bottom:-27px;left:-27px;&quot;&gt;&lt;img src=&quot;&#039; + markerURL + &#039;&quot;&gt;&lt;/div&gt;&#039;;&#13;&#10;                        } &#13;&#10;        }  &#13;&#10;    &#13;&#10;         &#13;&#10;         &#13;&#10;         &#13;&#10;         }   //if&#13;&#10;        }  // for&#13;&#10;    &#13;&#10;    }  //  if (seriesIndex == 1)&#13;&#10;},"/>
  <extendedProperties name="jschart.zoom" value="x"/>
  <extendedProperties name="jschart.animation" value="true"/>
  <extendedProperties name="keep.hierarchy.category" value="false"/>
  <extendedProperties name="keep.hierarchy.series" value="false"/>
  <extendedProperties name="jschart.series.shadow" value="true"/>
  <sampleData>
   <baseSampleData dataSetRepresentation="01/05/2000,02/01/2000,04/12/2000,03/12/2000,02/29/2000"/>
   <orthogonalSampleData dataSetRepresentation="6,4,12,8,10" seriesDefinitionIndex="0"/>
   <orthogonalSampleData dataSetRepresentation="42,91,62,9,21" seriesDefinitionIndex="1"/>
  </sampleData>
  <emptyMessage>
   <caption value="This chart contains no data."/>
   <background _body=",64,127,127,127"/>
   <outline>
    <color _body=",128,127,127,127"/>
   </outline>
  </emptyMessage>
  <axes type="3" staggered="false" interval="6">
   <title>
    <background _nil="1"/>
    <outline>
     <color _nil="1"/>
    </outline>
   </title>
   <associatedAxes percent="false">
    <title>
     <background _nil="1"/>
     <outline>
      <color _nil="1"/>
     </outline>
    </title>
    <seriesDefinitions>
     <query definition=""/>
     <seriesPalette>
      <entries _body=",255,192,192,192"/>
      <entries _body=",255,0,121,193"/>
      <entries _body=",255,232,172,57"/>
      <entries _body=",255,128,255,128"/>
      <entries _body=",255,64,128,128"/>
      <entries _body=",255,128,128,192"/>
      <entries _body=",255,170,85,85"/>
      <entries _body=",255,128,128,0"/>
      <entries _body=",255,192,192,192"/>
      <entries _body=",255,255,255,128"/>
      <entries _body=",255,128,192,128"/>
      <entries _body=",255,7,146,94"/>
      <entries _body=",255,0,128,255"/>
      <entries _body=",255,255,128,192"/>
      <entries _body=",255,0,255,255"/>
      <entries _body=",255,255,128,128"/>
      <entries _body=",255,0,128,192"/>
      <entries _body=",255,128,128,192"/>
      <entries _body=",255,255,0,255"/>
      <entries _body=",255,128,64,64"/>
      <entries _body=",255,255,128,64"/>
      <entries _body=",255,80,240,120"/>
      <entries _body=",255,0,64,128"/>
      <entries _body=",255,128,0,64"/>
      <entries _body=",255,255,0,128"/>
      <entries _body=",255,128,128,64"/>
      <entries _body=",255,128,128,128"/>
      <entries _body=",255,255,128,255"/>
      <entries _body=",255,0,64,0"/>
      <entries _body=",255,0,0,0"/>
      <entries _body=",255,255,255,255"/>
      <entries _body=",255,255,128,0"/>
     </seriesPalette>
     <series _type="LineSeries" seriesIdentifier="Series 1" stacked="false">
      <label>
       <background _nil="1"/>
       <outline>
        <color _nil="1"/>
       </outline>
      </label>
      <dataDefinition definition="if (row[&quot;totalnetworth&quot;] == 0)&#13;&#10; null;&#13;&#10;else&#13;&#10; row[&quot;totalnetworth&quot;];">
       <grouping/>
      </dataDefinition>
      <dataPoint separator=", ">
       <components type="1"/>
      </dataPoint>
      <triggers condition="6">
       <action type="1">
        <value _type="TooltipValue" text="" delay="200"/>
       </action>
      </triggers>
      <curveFitting _nil="1"/>
      <markers visible="false">
       <outline/>
      </markers>
      <lineAttributes style="1">
       <color _nil="1"/>
      </lineAttributes>
     </series>
     <grouping _nil="1"/>
    </seriesDefinitions>
    <seriesDefinitions>
     <query definition=""/>
     <seriesPalette>
      <entries _body=",255,0,121,193"/>
      <entries _body=",255,232,172,57"/>
      <entries _body=",255,128,255,128"/>
      <entries _body=",255,64,128,128"/>
      <entries _body=",255,128,128,192"/>
      <entries _body=",255,170,85,85"/>
      <entries _body=",255,128,128,0"/>
      <entries _body=",255,192,192,192"/>
      <entries _body=",255,255,255,128"/>
      <entries _body=",255,128,192,128"/>
      <entries _body=",255,7,146,94"/>
      <entries _body=",255,0,128,255"/>
      <entries _body=",255,255,128,192"/>
      <entries _body=",255,0,255,255"/>
      <entries _body=",255,255,128,128"/>
      <entries _body=",255,0,128,192"/>
      <entries _body=",255,128,128,192"/>
      <entries _body=",255,255,0,255"/>
      <entries _body=",255,128,64,64"/>
      <entries _body=",255,255,128,64"/>
      <entries _body=",255,80,240,120"/>
      <entries _body=",255,0,64,128"/>
      <entries _body=",255,128,0,64"/>
      <entries _body=",255,255,0,128"/>
      <entries _body=",255,128,128,64"/>
      <entries _body=",255,128,128,128"/>
      <entries _body=",255,255,128,255"/>
      <entries _body=",255,0,64,0"/>
      <entries _body=",255,0,0,0"/>
      <entries _body=",255,255,255,255"/>
      <entries _body=",255,255,128,0"/>
      <entries _body=",255,192,192,192"/>
     </seriesPalette>
     <series _type="LineSeries" seriesIdentifier="Series 2" stacked="false">
      <label>
       <background _nil="1"/>
       <outline>
        <color _nil="1"/>
       </outline>
      </label>
      <dataDefinition definition="if (row[&quot;projectednetworth&quot;] == null)&#13;&#10; 0;&#13;&#10;else&#13;&#10; row[&quot;projectednetworth&quot;];">
       <grouping/>
      </dataDefinition>
      <dataPoint separator=", ">
       <components type="1"/>
      </dataPoint>
      <curveFitting _nil="1"/>
      <cursor type="0"/>
      <markers type="2" visible="false">
       <outline visible="false"/>
      </markers>
      <lineAttributes thickness="4">
       <color _nil="1"/>
      </lineAttributes>
     </series>
    </seriesDefinitions>
    <lineAttributes>
     <color _body=",255,192,192,192"/>
    </lineAttributes>
    <label>
     <caption>
      <font size="8.0"/>
      <color _body=",255,145,145,145"/>
     </caption>
     <background _nil="1"/>
     <outline>
      <color _nil="1"/>
     </outline>
    </label>
    <majorGrid>
     <lineAttributes>
      <color _body=",255,0,0,0"/>
     </lineAttributes>
     <tickAttributes>
      <color _body=",255,0,0,0"/>
     </tickAttributes>
    </majorGrid>
    <minorGrid>
     <lineAttributes>
      <color _nil="1"/>
     </lineAttributes>
     <tickAttributes>
      <color _nil="1"/>
     </tickAttributes>
    </minorGrid>
    <origin>
     <value _nil="1"/>
    </origin>
   </associatedAxes>
   <seriesDefinitions sorting="0">
    <query definition=""/>
    <seriesPalette>
     <entries _body=",255,192,192,192"/>
     <entries _body=",255,0,121,193"/>
     <entries _body=",255,232,172,57"/>
     <entries _body=",255,128,255,128"/>
     <entries _body=",255,64,128,128"/>
     <entries _body=",255,128,128,192"/>
     <entries _body=",255,170,85,85"/>
     <entries _body=",255,128,128,0"/>
     <entries _body=",255,192,192,192"/>
     <entries _body=",255,255,255,128"/>
     <entries _body=",255,128,192,128"/>
     <entries _body=",255,7,146,94"/>
     <entries _body=",255,0,128,255"/>
     <entries _body=",255,255,128,192"/>
     <entries _body=",255,0,255,255"/>
     <entries _body=",255,255,128,128"/>
     <entries _body=",255,0,128,192"/>
     <entries _body=",255,128,128,192"/>
     <entries _body=",255,255,0,255"/>
     <entries _body=",255,128,64,64"/>
     <entries _body=",255,255,128,64"/>
     <entries _body=",255,80,240,120"/>
     <entries _body=",255,0,64,128"/>
     <entries _body=",255,128,0,64"/>
     <entries _body=",255,255,0,128"/>
     <entries _body=",255,128,128,64"/>
     <entries _body=",255,128,128,128"/>
     <entries _body=",255,255,128,255"/>
     <entries _body=",255,0,64,0"/>
     <entries _body=",255,0,0,0"/>
     <entries _body=",255,255,255,255"/>
     <entries _body=",255,255,128,0"/>
    </seriesPalette>
    <series seriesIdentifier="">
     <label>
      <background _nil="1"/>
      <outline>
       <color _nil="1"/>
      </outline>
     </label>
     <dataDefinition definition="row[&quot;plotdate&quot;]"/>
     <dataPoint separator=", ">
      <components type="1"/>
     </dataPoint>
     <curveFitting _nil="1"/>
    </series>
    <grouping groupingUnit="5" groupType="1"/>
    <sortKey definition="row[&quot;birthyear&quot;]"/>
   </seriesDefinitions>
   <lineAttributes>
    <color _body=",255,192,192,192"/>
   </lineAttributes>
   <label>
    <caption>
     <font size="7.0" rotation="90.0"/>
     <color _body=",255,145,145,145"/>
    </caption>
    <background _nil="1"/>
    <outline>
     <color _nil="1"/>
    </outline>
   </label>
   <formatSpecifier _type="JavaDateFormatSpecifier" pattern="MMM yyyy"/>
   <majorGrid>
    <lineAttributes>
     <color _body=",255,0,0,0"/>
    </lineAttributes>
    <tickAttributes visible="false">
     <color _nil="1"/>
    </tickAttributes>
   </majorGrid>
   <minorGrid>
    <lineAttributes>
     <color _nil="1"/>
    </lineAttributes>
    <tickAttributes>
     <color _nil="1"/>
    </tickAttributes>
   </minorGrid>
   <origin>
    <value _nil="1"/>
   </origin>
  </axes>
  <rotation>
   <angles/>
  </rotation>
 </ChartWithAxes>
</ActuateChart>
]]></xml-property>
                        <property name="outputFormat">JS</property>
                        <property name="inheritColumns">false</property>
                        <property name="marginTop">10pt</property>
                        <property name="height">3.8020833333333335in</property>
                        <property name="width">1000px</property>
                        <property name="dataSet">Data Set</property>
                        <list-property name="boundDataColumns">
                            <structure>
                                <property name="name">birthyear</property>
                                <expression name="expression" type="javascript">dataSetRow["birthyear"]</expression>
                                <property name="dataType">integer</property>
                            </structure>
                            <structure>
                                <property name="name">yearmonth</property>
                                <expression name="expression" type="javascript">dataSetRow["yearmonth"]</expression>
                                <property name="dataType">integer</property>
                            </structure>
                            <structure>
                                <property name="name">totalnetworth</property>
                                <expression name="expression" type="javascript">dataSetRow["totalnetworth"]</expression>
                                <property name="dataType">float</property>
                            </structure>
                            <structure>
                                <property name="name">retirementage</property>
                                <expression name="expression" type="javascript">dataSetRow["retirementage"]</expression>
                                <property name="dataType">integer</property>
                            </structure>
                            <structure>
                                <property name="name">retirementamt</property>
                                <expression name="expression" type="javascript">dataSetRow["retirementamt"]</expression>
                                <property name="dataType">float</property>
                            </structure>
                            <structure>
                                <property name="name">projectednetworth</property>
                                <expression name="expression" type="javascript">dataSetRow["projectednetworth"]</expression>
                                <property name="dataType">float</property>
                            </structure>
                            <structure>
                                <property name="name">plotdate</property>
                                <expression name="expression" type="javascript">dataSetRow["plotdate"]</expression>
                                <property name="dataType">date-time</property>
                            </structure>
                            <structure>
                                <property name="name">lifeeventnote</property>
                                <expression name="expression" type="javascript">dataSetRow["lifeeventnote"]</expression>
                                <property name="dataType">string</property>
                            </structure>
                        </list-property>
                    </extended-item>
                    <grid id="130">
                        <property name="fontSize">12pt</property>
                        <property name="marginTop">0pt</property>
                        <property name="marginLeft">0px</property>
                        <property name="textAlign">left</property>
                        <property name="width">1000px</property>
                        <column id="131"/>
                        <row id="132">
                            <cell id="133">
                                <property name="paddingTop">10pt</property>
                                <property name="paddingLeft">1pt</property>
                                <property name="textAlign">center</property>
                                <text id="125">
                                    <property name="contentType">html</property>
                                    <text-property name="content"><![CDATA[<script>
function _$(id){return document.getElementById(id);}
var monthlyContribution = "<VALUE-OF>params["pMonthlyContribution"].value</VALUE-OF>";
var investmentStyle = <VALUE-OF>params["pInvestmentStyle"].value</VALUE-OF>;
var lifeEventStates = "<VALUE-OF>params["pLifeEventStates"].value</VALUE-OF>".split(",");
var lifeEventNames = "<VALUE-OF>params["pLifeEventNames"].value</VALUE-OF>".split(",");
var lifeEventTypes = "<VALUE-OF>params["pLifeEventTypes"].value</VALUE-OF>".split(",");
var lifeEventDates = "<VALUE-OF>params["pLifeEventDates"].value</VALUE-OF>".split(",");
var lifeEventAmounts = "<VALUE-OF>params["pLifeEventAmounts"].value</VALUE-OF>".split(",");
var typeNames = ["House", "Car", "College", "Wedding", "Vacation", "Miscellaneous"];
var lifeEventEdit = -1;

function initLifeEvents() {
	_$("investmentStyle").value = investmentStyle;
	displayLifeEvents();
}

function addLifeEvent() {
	var type = _$("selAddLifeEvent").value;
	if (type == 0)
		return;

	var idx = lifeEventStates.length;
	lifeEventStates[idx] = 1;
	lifeEventNames[idx] = typeNames[type - 1] + " event";
	lifeEventTypes[idx] = type;
	lifeEventAmounts[idx] = 500000;
	lifeEventDates[idx] = "202009";

	displayLifeEvents();
	displayLifeEventEdit(null, idx);
	_$("selAddLifeEvent").value = 0;
	_$("lifeEventAmount" + idx).focus();
	_$("lifeEventAmount" + idx).select();
}

function displayLifeEvents() {
	updateLifeEvents();

	var html = "<table border='0'><tr>";
	for (var i = 0; i < lifeEventTypes.length; i++) {
		html += "<td valign='top'>"
		html += "<div id='lifeEventContainer" + i + "' style='width:310px; padding:3px;'>";
		html += "<div id='lifeEvent" + i + "' style='font-size:13pt'>";
		html += "<span style='vertical-align:top'>";
		html += "<input type='checkbox' style='vertical-align:top' id='lifeEventState" + i + "' onclick='event.stopPropagation()' ";
		if (lifeEventStates[i] == 1)
			html += " checked ";
		html += "></input><span style='vertical-align:top;cursor:default' onclick='toggleLifeEventState(" + i + ")'>";
		html += lifeEventNames[i];
		html += "</span></span>";
		html += "<img title='Edit Event' style='margin-left:10px;' src='../../servlet/DownloadFile?name=/Applications/SFWealthApp/images/edit.png' ontouchstart='displayLifeEventEdit(event," + i + ")' onclick='displayLifeEventEdit(event," + i + ")' />";
		html += "</div>";
		html += "</div>";
		html += "</td>";
		if ((i + 1) % 3 == 0)
			html += "</tr><tr>";
	}
	html += "</tr></table>";
	_$("allLifeEventsContainer").innerHTML = html;
}

function displayLifeEventEdit(event, idx) {
	if (event)	
		event.preventDefault();
	displayLifeEvents();

	var html = "";
	html += "<div id='lifeEvent" + idx + "' style='padding:2px; border:1px solid #4F91CD; border-radius:3px'>";
	html += "<input type='checkbox' id='lifeEventState" + idx + "'";
	if (lifeEventStates[idx] == 1)
		html += " checked ";
	html += "></input>";
	html += "<input type='text' style='width:255px;float:right;margin-right:3px;font-size:12pt' id='lifeEventName" + idx + "' value=\"" + lifeEventNames[idx] + "\"></input>";
	html += "<table border='0' style='width:304px'>";
	html += "<tr><td>Amount $</td>";
	html += "<td align='right'><input type='number' style='width:190px;font-size:12pt' id='lifeEventAmount" + idx + "' value='" + lifeEventAmounts[idx] + "'></input></td></tr>";	
	html += "<tr><td>Year-Month</td>";
	html += "<td align='right'><input type='text' pattern='[0-9]*' style='width:190px;font-size:12pt' id='lifeEventDate" + idx + "' value='" + formatYearMonth(parseYearMonth(lifeEventDates[idx])) + "'></input></td></tr>";	
	html += "</table>"
	html += "</div>";
	_$("lifeEventContainer" + idx).innerHTML = html;	
	lifeEventEdit = idx;
}

function updateLifeEvents() {
	if (lifeEventEdit != -1) {
		lifeEventStates[lifeEventEdit] = _$("lifeEventState" + lifeEventEdit).checked ? 1 : 0;
		lifeEventNames[lifeEventEdit] = _$("lifeEventName" + lifeEventEdit).value;
		lifeEventAmounts[lifeEventEdit] = _$("lifeEventAmount" + lifeEventEdit).value;
		lifeEventDates[lifeEventEdit] = parseYearMonth(_$("lifeEventDate" + lifeEventEdit).value);				
		lifeEventEdit = -1;
	}
	for (var i = 0; i < lifeEventStates.length; i++) {
		var elem = _$("lifeEventState" + i);
		if (elem)
			lifeEventStates[i] = elem.checked ? 1 : 0;
	}
}

function toggleLifeEventState(ind) { 
	var elem = _$("lifeEventState" + ind);
	elem.checked = !elem.checked;
}


function formatYearMonth(raw) {
	raw = "" + raw;	
	return raw.substring(0, 4) + "-" + raw.substring(4, 6);
}

function parseYearMonth(formatted) {
	formatted = new String(formatted);
	if (formatted.indexOf("-") > -1)
		return (parseInt(formatted.substring(0, 4), 10) * 100) + parseInt(formatted.substring(5, 7), 10);
	else
		return parseInt(formatted, 10);
}

function allocate(event) {
	if (event)
		event.preventDefault();		
	displayLifeEvents();
	
	
	if (window["actuate"]) {
		if (actuate["mobilex"]) {
			runReportMobile();
		} else if (actuate["viewer"]) {
			runReportViewer();
		} else {
			runReportURL();
		}
	} else {
		runReportURL();
	}
}
	
function getRunReportParams() {
	var params = {};

	params["pMonthlyContribution"] = _$("monthlyContibution").value;
	params["pInvestmentStyle"] = _$("investmentStyle").value;
	params["pLifeEventStates"] = lifeEventStates.join(",");
	params["pLifeEventTypes"] = lifeEventTypes.join(",");
	params["pLifeEventNames"] = lifeEventNames.join(",");
	params["pLifeEventAmounts"] = lifeEventAmounts.join(",");
	params["pLifeEventDates"] = lifeEventDates.join(",");

	return params;
}

function getRunReportURLParams() {
	var obj = getRunReportParams();
	var str = [];

	for(var p in obj)
		str.push(encodeURIComponent(p) + "=" + encodeURIComponent(obj[p]));

	return str.join("&amp;");
}

function runReportURL() {	
	var url = "";
	url += "executereport.do?__executableName=";
	url += encodeURIComponent("<VALUE-OF>vars["reportExecutableName"]</VALUE-OF>");
	url += "&amp;invokesubmit=true&amp;__format=html&amp;";
	
	url += getRunReportURLParams();
	location.href = url;
}

function runReportMobile() {
	var params = getRunReportURLParams();
	actuate.mobilex.runReport(null, null, params);
}

function runReportViewer() {
	var viewer = actuate.getViewer("allLifeEventsContainer");

 	var params = getRunReportParams();
	viewer.setParameters(params);

	viewer.submit();
}

</script>]]></text-property>
                                </text>
                                <text id="126">
                                    <property name="contentType">html</property>
                                    <text-property name="content"><![CDATA[<form action="javascript:allocate()">
<table width="98%" style="font-family:Arial: border:0">
<tr>
<td align="left">
	<select id="selAddLifeEvent" onchange="addLifeEvent()" style="font-size:13pt">
		<option value="0">Add Life Event</option>
		<option value="1">House</option>
		<option value="2">Car</option>
		<option value="3">College</option>
		<option value="4">Wedding</option>
		<option value="5">Vacation</option>
		<option value="6">Miscellaneous</option>
	</select>
</td>
<td align="center">
	Monthly Contribution $<input type="number" size="10" id="monthlyContibution" name="monthlyContribution" value="<VALUE-OF>params["pMonthlyContribution"].value</VALUE-OF>" style="font-size:13pt;width:100px"></input>
</td>
<td align="right">
	Investment Style
	<select id="investmentStyle" style="font-size:13pt">
		<option value="0.02">Conservative</option>
		<option value="0.04">Moderately Conservative</option>
		<option value="0.06">Moderately Aggressive</option>
		<option value="0.08">Aggressive</option>
	</select>
</td>
</tr>
</table>
</form>]]></text-property>
                                </text>
                                <text id="129">
                                    <property name="marginTop">0pt</property>
                                    <property name="marginBottom">0px</property>
                                    <property name="contentType">html</property>
                                    <text-property name="content"><![CDATA[<div id="allLifeEventsContainer" style="margin-top:10px; border:1px solid #808080; width:980px;border-radius:5px"></div>]]></text-property>
                                </text>
                                <text id="414">
                                    <property name="marginTop">10pt</property>
                                    <list-property name="visibility">
                                        <structure>
                                            <property name="format">all</property>
                                            <expression name="valueExpr">(retirementAgeGoalAchieved == true)</expression>
                                        </structure>
                                    </list-property>
                                    <property name="contentType">html</property>
                                    <text-property name="content"><![CDATA[<div style="width:980px; border:1px solid red; color: red; padding:3px">
At the age of <VALUE-OF>retirementage</VALUE-OF> you will have <VALUE-OF format="$#,##0">retirementAmountAtAgeGoal</VALUE-OF>, which is less than your retirement goal of <VALUE-OF format="$#,##0">retirementamt</VALUE-OF>
<br />
With this plan, you will not attain your goal until <VALUE-OF format="MMMM yyyy">var yearmonthVal = new String(retirementAmountAchievedYearMonth);
var yearVal = parseInt(yearmonthVal.substring(0, 4), 10);
var monthVal = parseInt(yearmonthVal.substring(4, 6), 10);
new Date(yearVal, monthVal - 1, 1);</VALUE-OF>
<br /><br />
Please contact your Financial Advisor to help you plan for and acheive your investment goals.
</div>


]]></text-property>
                                </text>
                                <text id="417">
                                    <property name="contentType">html</property>
                                    <text-property name="content"><![CDATA[<div style="margin-top: 15px; text-align:center; width:95%">
	<button ontouchstart="allocate(event)" onclick="allocate(event)" style="padding:2px;font-size:14pt;font-weight:bold;width:250px">Re-Allocate</button>
</div>

<script>
initLifeEvents();
</script>]]></text-property>
                                </text>
                            </cell>
                        </row>
                    </grid>
                </cell>
            </row>
        </grid>
    </body>
    <property name="pageVariables">
        <variable-element name="reportExecutableName">
            <expression name="value" type="javascript">reportContext.getReportRunnable().getReportName()</expression>
            <property name="type">report</property>
        </variable-element>
        <variable-element name="planningData">
            <property name="type">report</property>
        </variable-element>
    </property>
</report>
